import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { FormGroup, FormControl, Validators, FormBuilder }  from '@angular/forms';
import {Observable} from 'rxjs/Rx';
import { AuthenticationService } from '../../services/login.service';

import { SubmitComponent } from './sub_page';
@Component({
  selector: 'ae-set1',
  templateUrl: './set1.html',
  styleUrls: ['./set1.css']
})


export class AeSet1Component implements OnInit {
    ticks =0;
    
  
   i :number;
  answers = [ 'കസ്റ്റമര്‍ക്ക് ഇഷ്ടമുള്ളപ്പോള്‍', 'ക്ഷേമയോടെ കേട്ടിരിക്കും', 'എല്ലായ്പ്പോഴും മികച്ച ഉപഭോക്ത സേവനം നല്‍കണം ഇല്ലങ്കില്‍ പരാചയപ്പെടാം',
  '300 M - 300 G','സിംഗിള്‍ ഫേസ് ഇന്‍ഡക്ഷന്‍ മോട്ടോര്‍','മാഗ്നട്രോണ്‍','റിഡോക്സ്','സ്റ്റാര്‍ട്ടിംഗ് വൈന്‍ഡിംഗ്',
             'ഡിസ്ടിലേഷന്‍','പി പി എം','കസ്ടമര്‍ റിലേഷന്‍ഷിപ്‌ മാനേജ്മെന്റ്','ഇവയെല്ലാം',
             'അന്യ മതങ്ങളില്‍ പെട്ടവരുമായി സംസരിക്കതിരിക്കുന്നത്','കൂട്ടുകാരന്‍റെ സഹായത്തോടെ സ്ഥലം സന്ദര്‍ശിക്കും',
            'പുതിയ ഉല്പന്നം പരിചയപ്പെടുത്താന്‍','പ്രോഡക്റ്റ് മാന്വൽ','ഫോൺ കോളിന്റെ ദൈർഘ്യ൦','ഇവയെല്ലാം','230V/15A','തീപ്പിടുത്തം','5-10 rpm','അഭിപ്രായ ഭിന്നതകൾ മാറ്റി വെച്ച് ഒരുമിച്ചു പ്രവൃത്തിക്കും','ഫിൽട്രേഷന് മുൻപ്',];
   favoriteSeason: string[]=[];
  qes: number ;
     total : number = 0;
     
  seasons0 = [  'രാവിലെ','രാത്രി','കസ്റ്റമര്‍ക്ക് ഇഷ്ടമുള്ളപ്പോള്‍', 'ഉച്ചയ്ക്ക് ശേഷം' ];
  seasons1 = [  'ക്ഷേമയോടെ കേട്ടിരിക്കും','ദേഷ്യപ്പെട്ടു ഇറങ്ങി പോകും','കസ്റ്റമറോട് ദേഷ്യപ്പെടും', 'സൂപ്പെര്‍വൈസറിനോട് പരാതി പറയും' ];
  seasons2 = [ 'മോശം ഉപഭോക്ത സേവനത്തിലുടെ നഷ്ട്ടപ്പെടുന്ന ഉപഭോക്താക്കളെ തിരിച്ചുവരുത്താന്‍ എളുപ്പമാണ്','ഉപഭോക്ത്ത സേവനം ബോറിംഗ് ആണ്',
   'ശരാശരി ഉപഭോക്ത സേവനം തന്നെ ധാരാളം ആണ്','എല്ലായ്പ്പോഴും മികച്ച ഉപഭോക്ത സേവനം നല്‍കണം ഇല്ലങ്കില്‍ പരാചയപ്പെടാം'];
  seasons3 = ['300 G - 3000 G','300 M - 300 G','30 K -300 M','30 M - 300 M'];  
  seasons4 = ['സിംഗിള്‍ ഫേസ് ഇന്‍ഡക്ഷന്‍ മോട്ടോര്‍','ത്രീ ഫേസ് സ്കുരല്‍ കേജ് മോട്ടോര്‍','സിംഗിള്‍ ഫേസ് സ്പിറ്റ് റിംഗ് മോട്ടോര്‍','ത്രീ ഫേസ് ഷേഡട് പോള്‍ മോട്ടോര്‍'];  
  seasons5 = ['ഫാന്‍','ടേണ്‍ ടേബിള്‍ മോട്ടോര്‍','വേവ് ഗൈഡ്','മാഗ്നട്രോണ്‍'];
  seasons6 = ['റിവേര്‍സ് ഓസ്മോസിസ്','ഹീറ്റിംഗ്','റിഡോക്സ്','സിമ്പിള്‍ മെക്കാനിക്കല്‍ സീവ് ആക്ഷന്‍'];
  seasons7 = ['സ്റ്റാര്‍ട്ടിംഗ് വൈന്‍ഡിംഗ്','കൊപ്പല്‍ സെറ്റിംഗ് വൈന്‍ഡിംഗ്','റണ്ണിഗ് വൈന്‍ഡിംഗ്','ഇതൊന്നും അല്ല'];
  seasons8 = ['ഫില്‍റ്റര്‍','ഡിസ്ടിലേഷന്‍','റിവേര്‍സ് ഓസ്മോസിസ്','യു വി സ്റെര്‍ലൈസേഷന്‍'];
  seasons9 = ['പി പി കെ','പി പി ടി', 'പി പി എം', 'പര്‍സെക്'];
  seasons10 =['കസ്റമര്‍ റെയിലറി മാറ്റര്‍','കറന്റ് റിമംബര്‍ മാച്ച്','കസ്ടമര്‍ റിലേഷന്‍ഷിപ്‌ മാനേജ്മെന്റ്','കസ്ടമര്‍ റുടിമെന്റലി മാനെജ്മെന്റ്'];
   seasons11 = ['സമർപ്പണം','ബഹുമാനം','പ്രൊഫഷണലിസം','ഇവയെല്ലാം'];
  seasons12 = ['ജോലിയില്‍ മറ്റുള്ളവരെ സഹായിക്കുന്നത്','കൃത്യ സമയം പാലിക്കുന്നത്', 'കസ്റ്റമറെ ബഹുമാനിക്കുന്നത്', 'അന്യ മതങ്ങളില്‍ പെട്ടവരുമായി സംസരിക്കതിരിക്കുന്നത്'];
  seasons13 = ['കൂട്ടുകാരന്‍റെ സഹായത്തോടെ സ്ഥലം സന്ദര്‍ശിക്കും','കൂട്ടുകാരന്‍റെ വീട്ടില്‍ സമയം ചിലവിട്ട് തിരിച്ചു വരും',
               'കൂട്ടുകരനോമോത്ത് സിനിമയ്ക്ക് പോകും','സ്ഥലം സന്ദര്‍ശിക്കുന്നത് വേണ്ടന്നു വെക്കും'];
  
   seasons14 = ['കൂടുതല്‍ പണം ആവശ്യപ്പെടാന്‍','മറന്നുപോയ ടൂള്‍സ് തിരികെ ലഭിക്കാന്‍','പുതിയ ഉല്പന്നം പരിചയപ്പെടുത്താന്‍',
                'വാറണ്ടി കാര്‍ഡ്‌ തിരിച്ചു വാങ്ങിക്കാന്‍'];
   seasons15 = ['സർവീസ് ബില്ല്','വാറണ്ടി','പ്രോഡക്റ്റ് മാന്വൽ','പ്രോഡക്റ്റ് അഡ്വെർടൈസ്‌മെന്റ്'];
   seasons16 = ['കസ്റ്റമറുടെ പേര്','ഫോൺ കോളിന്റെ ദൈർഘ്യ൦','കസ്റ്റമറുടെ ഫോൺ നമ്പർ',
                'ഫോൺ കാൾ വന്ന സമയം'];
   seasons17 = ['സംഘടനാ  മാനദണ്ഡങ്ങൾ','സംഘടയലുള്ള ആചാരങ്ങളും ചടങ്ങുകളും','പൊതുവായ ഭാഷ   ഉപയോഗിക്കുന്നത്',
                'ഇവയെല്ലാം'];
    seasons18 = ['440V /10A','230V/15A','230V/10A','400V/10A'];
  seasons19 = ['ഉരുകൽ','തീപ്പിടുത്തം','പൊട്ടിത്തെറി','ഷോക്ക്'];
  seasons20 = ['5-20 rpm','10-20 rpm','15-20 rpm','5-10 rpm'];
  seasons21 = ['സർവീസിന് പോകാൻ സാധിക്കില്ല എന്ന് സൂപ്പർവൈസറിനോട്  പറയും','മറ്റ്‌  എന്തെകിലും കാരണം പറഞ്ഞു ഒഴിവാകും','അഭിപ്രായ ഭിന്നതകൾ മാറ്റി വെച്ച് ഒരുമിച്ചു പ്രവൃത്തിക്കും','ജോലി രാജിവെക്കും '];
  seasons22 = ['ഫിൽട്രേഷന് മുൻപ്','ഫിൽട്രേഷന് ശേഷം','ഫിൽട്രേഷന് ഒപ്പം','ക്ലോറിനേഷന് ഒപ്പം'];
  
  constructor( private router: Router, private As: AuthenticationService) {   }
  ngOnInit()  {
    
         let timer = Observable.timer(2000,1000);
          timer.subscribe(t=> {
        this.func(t);
    });
        
        
        
    
  this.qes = 1;
  }
  func(c:any)
  {
    this.ticks = c;
    if (this.ticks == 1200)
    {
      this.res();
    }

  }
 login() {
   
   console.log('insisi');
   
 }
  next()
  {  
    this.qes++
  }
  prev()
  {  
    this.qes = this.qes-1;
  }
  res()
  {
    console.log(this.favoriteSeason);
                              this.total=0;
                           for(this.i=0;this.i<23;this.i++)
                           {

                             console.log(this.answers[this.i]);
                             console.log(this.favoriteSeason[this.i]);
                              if(this.answers[this.i] === this.favoriteSeason[this.i])
                              {
                                this.total++;
                              }
                           }

   
     this.As.col_tot(this.total);
      
      this.router.navigate(['/end']);

  }
  }
